In file included from cmatweann/Eigen/Core:255:0,
                 from cmatweann/nn.h:11,
                 from cmatweann/cmat.h:16,
                 from cmatweann.cpp:30:
cmatweann/Eigen/src/Core/util/Memory.h: In function ‘Index Eigen::internal::first_aligned(const Scalar*, Index)’:
cmatweann/Eigen/src/Core/util/Memory.h:462:48: warning: typedef ‘Packet’ locally defined but not used [-Wunused-local-typedefs]
   typedef typename packet_traits<Scalar>::type Packet;
                                                ^
In file included from cmatweann/Eigen/Core:331:0,
                 from cmatweann/nn.h:11,
                 from cmatweann/cmat.h:16,
                 from cmatweann.cpp:30:
cmatweann/Eigen/src/Core/products/SelfadjointMatrixVector.h: In function ‘void Eigen::internal::product_selfadjoint_vector(Index, const Scalar*, Index, const Scalar*, Index, Scalar*, Scalar)’:
cmatweann/Eigen/src/Core/products/SelfadjointMatrixVector.h:44:44: warning: typedef ‘RealScalar’ locally defined but not used [-Wunused-local-typedefs]
   typedef typename NumTraits<Scalar>::Real RealScalar;
                                            ^
In file included from cmatweann/Eigen/Cholesky:25:0,
                 from cmatweann/Eigen/QR:8,
                 from cmatweann/Eigen/SVD:4,
                 from cmatweann/nn.h:12,
                 from cmatweann/cmat.h:16,
                 from cmatweann.cpp:30:
cmatweann/Eigen/src/Cholesky/LLT.h: In static member function ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&)’:
cmatweann/Eigen/src/Cholesky/LLT.h:201:41: warning: typedef ‘Scalar’ locally defined but not used [-Wunused-local-typedefs]
     typedef typename MatrixType::Scalar Scalar;
                                         ^
In file included from cmatweann/Eigen/QR:28:0,
                 from cmatweann/Eigen/SVD:4,
                 from cmatweann/nn.h:12,
                 from cmatweann/cmat.h:16,
                 from cmatweann.cpp:30:
cmatweann/Eigen/src/QR/HouseholderQR.h: In function ‘void Eigen::internal::householder_qr_inplace_blocked(MatrixQR&, HCoeffs&, typename MatrixQR::Index, typename MatrixQR::Scalar*)’:
cmatweann/Eigen/src/QR/HouseholderQR.h:248:41: warning: typedef ‘RealScalar’ locally defined but not used [-Wunused-local-typedefs]
   typedef typename MatrixQR::RealScalar RealScalar;
                                         ^
In file included from cmatweann/Eigen/Core:277:0,
                 from cmatweann/nn.h:11,
                 from cmatweann/cmat.h:16,
                 from cmatweann.cpp:30:
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<int, -1, -1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<int, -1, -1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<int, -1, -1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<int, -1, -1>’
cmatweann/nn.h:21:14:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
cmatweann/nn.h:22:14:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >’
cmatweann/nn.h:37:46:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<int, -1, 1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<int, -1, 1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<int, -1, 1>’
cmatweann/cmat.h:152:12:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, -1, -1>’
cmatweann/cmat.h:156:12:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >’
cmatweann/cmat.h:51:65:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>’
cmatweann/cmat.h:52:37:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, -1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, -1> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, -1> >’
cmatweann/cmat.h:56:75:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, -1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, -1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, -1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<int, -1, -1>, -1, -1, false, true>’
cmatweann/cmat.h:57:37:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<int, -1, -1>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true>’
cmatweann/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>’
cmatweann/cmat.h:62:23:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>’
cmatweann/cmat.h:237:29:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >’
cmatweann/cmat.h:247:32:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/products/GeneralMatrixMatrix.h:392:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>’
cmatweann/cmat.h:247:34:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>’
cmatweann/cmat.h:247:43:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4> >’
cmatweann/cmat.h:247:43:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/cmat.h:267:36:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >’
cmatweann/cmat.h:272:17:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4>, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1> >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4>’
cmatweann/cmat.h:272:42:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4>, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4> >’
cmatweann/cmat.h:272:42:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 4> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/cmat.h:278:55:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2>’
cmatweann/cmat.h:278:56:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/util/BlasUtil.h:238:13:   required from ‘struct Eigen::internal::blas_traits<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/ProductBase.h:92:60:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2>’
cmatweann/cmat.h:278:56:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> > >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/ProductBase.h:242:7:   required from ‘class Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >’
cmatweann/cmat.h:278:63:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/products/GeneralMatrixMatrix.h:392:7:   required from ‘class Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>’
cmatweann/cmat.h:281:24:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5> >’
cmatweann/cmat.h:281:37:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/products/GeneralMatrixMatrix.h:392:7:   required from ‘class Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>’
cmatweann/cmat.h:282:15:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/products/GeneralMatrixMatrix.h:392:7:   required from ‘class Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>’
cmatweann/cmat.h:282:19:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, -1, 1> >’
cmatweann/cmat.h:284:54:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>’
cmatweann/cmat.h:284:54:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >’
cmatweann/Eigen/src/Core/util/BlasUtil.h:238:13:   required from ‘struct Eigen::internal::blas_traits<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/ProductBase.h:92:60:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>’
cmatweann/cmat.h:284:54:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > >’
cmatweann/cmat.h:284:70:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > >’
cmatweann/cmat.h:284:73:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > > >’
cmatweann/cmat.h:284:73:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> > > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1> >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4>’
cmatweann/cmat.h:287:56:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4> >’
cmatweann/cmat.h:287:56:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 4> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > >’:
cmatweann/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/ArrayWrapper.h:49:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >’
cmatweann/cmat.h:320:17:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > > >’:
cmatweann/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > >’
cmatweann/cmat.h:320:24:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::MatrixWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > > > >’
cmatweann/Eigen/src/Core/ArrayWrapper.h:156:7:   required from ‘class Eigen::MatrixWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > > >’
cmatweann/cmat.h:320:33:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann.cpp: In function ‘_jdoubleArray* Java_de_goost_jcmatweann_CMATWEANN_activate(JNIEnv*, jobject, jint, jdoubleArray, jint)’:
cmatweann.cpp:102:9: error: expected ‘;’ before ‘for’
         for(int cnt = 0; cnt < outputSize; cnt ++){
         ^
cmatweann.cpp:102:24: warning: statement has no effect [-Wunused-value]
         for(int cnt = 0; cnt < outputSize; cnt ++){
                        ^
cmatweann.cpp:102:26: error: name lookup of ‘cnt’ changed for ISO ‘for’ scoping [-fpermissive]
         for(int cnt = 0; cnt < outputSize; cnt ++){
                          ^
cmatweann.cpp:102:26: note: (if you use ‘-fpermissive’ G++ will accept your code)
cmatweann.cpp:102:30: warning: statement has no effect [-Wunused-value]
         for(int cnt = 0; cnt < outputSize; cnt ++){
                              ^
cmatweann.cpp:102:50: error: expected ‘;’ before ‘)’ token
         for(int cnt = 0; cnt < outputSize; cnt ++){
                                                  ^
In file included from cmatweann/Eigen/Core:277:0,
                 from cmatweann/nn.h:11,
                 from cmatweann/cmat.h:16,
                 from cmatweann.cpp:30:
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:190:79:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/cmat.h:82:8:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >; Derived = Eigen::Matrix<double, -1, 1>]’
cmatweann/cmat.h:267:13:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:278:11:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >’
cmatweann/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
cmatweann/Eigen/src/Core/Dot.h:140:37:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
cmatweann/cmat.h:83:29:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 0> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 0> >’
cmatweann/Eigen/src/Core/Diagonal.h:77:52:   required from ‘class Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/DiagonalMatrix.h:100:20:   required from ‘void Eigen::DiagonalBase<Derived>::evalTo(Eigen::MatrixBase<OtherDerived>&) const [with DenseDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Derived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >]’
cmatweann/Eigen/src/Core/Assign.h:581:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>]’
cmatweann/cmat.h:109:38:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 0> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true>’
cmatweann/Eigen/src/SVD/JacobiSVD.h:601:18:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<long int, 1, -1, 1, 1, -1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<long int, 1, -1, 1, 1, -1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<long int, 1, -1, 1, 1, -1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<long int, 1, -1, 1, 1, -1>’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:346:22:   required from ‘class Eigen::ColPivHouseholderQR<Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:39:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<long int, 1, -1, 1, 1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 1, -1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 1, -1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 1, -1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 1, -1>’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:347:19:   required from ‘class Eigen::ColPivHouseholderQR<Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:39:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/SVD/JacobiSVD.h:144:81:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:598:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/TriangularMatrix.h:157:44:   required from ‘struct Eigen::internal::traits<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u> >’
cmatweann/Eigen/src/Core/EigenBase.h:44:59:   required from ‘struct Eigen::EigenBase<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u> >’
cmatweann/Eigen/src/Core/TriangularMatrix.h:42:34:   required from ‘class Eigen::TriangularBase<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u> >’
cmatweann/Eigen/src/Core/TriangularMatrix.h:171:58:   required from ‘class Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>’
cmatweann/Eigen/src/SVD/JacobiSVD.h:145:24:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:598:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 2, 2> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 2, 2> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 2> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 2, 2>’
cmatweann/Eigen/src/SVD/JacobiSVD.h:266:26:   required from ‘void Eigen::internal::real_2x2_jacobi_svd(const MatrixType&, Index, Index, Eigen::JacobiRotation<RealScalar>*, Eigen::JacobiRotation<RealScalar>*) [with MatrixType = Eigen::Matrix<double, -1, -1>; RealScalar = double; Index = long int]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:634:78:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 2>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 2, 2> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>’
cmatweann/Eigen/src/Jacobi/Jacobi.h:284:10:   required from ‘void Eigen::MatrixBase<Derived>::applyOnTheLeft(Eigen::MatrixBase<Derived>::Index, Eigen::MatrixBase<Derived>::Index, const Eigen::JacobiRotation<OtherScalar>&) [with OtherScalar = double; Derived = Eigen::Matrix<double, -1, -1>; Eigen::MatrixBase<Derived>::Index = long int]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:637:11:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:653:59:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/Swap.h:40:41:   required from ‘class Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/DenseBase.h:399:7:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&, int) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:672:22:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>]’
cmatweann/Eigen/src/Core/DiagonalMatrix.h:99:3:   required from ‘void Eigen::DiagonalBase<Derived>::evalTo(Eigen::MatrixBase<OtherDerived>&) const [with DenseDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Derived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >]’
cmatweann/Eigen/src/Core/Assign.h:581:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>]’
cmatweann/cmat.h:109:38:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >’
cmatweann/Eigen/src/Core/Diagonal.h:77:52:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>’
cmatweann/Eigen/src/Core/DiagonalMatrix.h:100:20:   required from ‘void Eigen::DiagonalBase<Derived>::evalTo(Eigen::MatrixBase<OtherDerived>&) const [with DenseDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >]’
cmatweann/Eigen/src/Core/Assign.h:581:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::DiagonalWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/cmat.h:220:9:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 0>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:305:63:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 2, 2>, 1, 2, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 2, 2>, 1, 2, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 2, 2>, 1, 2, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 2, 2>, 1, 2, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 2, 2>, 1, 2, false, true>’
cmatweann/Eigen/src/Jacobi/Jacobi.h:284:10:   required from ‘void Eigen::MatrixBase<Derived>::applyOnTheLeft(Eigen::MatrixBase<Derived>::Index, Eigen::MatrixBase<Derived>::Index, const Eigen::JacobiRotation<OtherScalar>&) [with OtherScalar = double; Derived = Eigen::Matrix<double, 2, 2>; Eigen::MatrixBase<Derived>::Index = long int]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:283:3:   required from ‘void Eigen::internal::real_2x2_jacobi_svd(const MatrixType&, Index, Index, Eigen::JacobiRotation<RealScalar>*, Eigen::JacobiRotation<RealScalar>*) [with MatrixType = Eigen::Matrix<double, -1, -1>; RealScalar = double; Index = long int]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:634:78:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 2, 2>, 1, 2, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>’
cmatweann/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, 1, -1>, -1>’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:399:91:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>’
cmatweann/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1>’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:406:25:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true>’
cmatweann/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, -1>’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:449:33:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> >’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:449:33:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
cmatweann/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >’
cmatweann/Eigen/src/Householder/Householder.h:102:63:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>’
cmatweann/Eigen/src/Householder/Householder.h:103:82:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >’
cmatweann/Eigen/src/Householder/Householder.h:104:41:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>’
cmatweann/Eigen/src/Householder/Householder.h:104:41:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>’
cmatweann/Eigen/src/Householder/Householder.h:105:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Householder/Householder.h:106:25:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >’
cmatweann/Eigen/src/Householder/Householder.h:107:29:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>’
cmatweann/Eigen/src/Householder/Householder.h:107:41:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:734:52:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, Big>::run(Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; bool Big = false]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:763:60:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:780:22:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity(Eigen::MatrixBase<Derived>::Index, Eigen::MatrixBase<Derived>::Index) [with Derived = Eigen::Matrix<double, -1, -1>; Eigen::MatrixBase<Derived>::Index = long int]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:602:24:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:388:30:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:406:25:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>’
cmatweann/Eigen/src/Core/VectorBlock.h:70:47:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:436:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Householder/Householder.h:104:41:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>’
cmatweann/Eigen/src/Householder/Householder.h:104:41:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Householder/Householder.h:107:29:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>’
cmatweann/Eigen/src/Householder/Householder.h:107:41:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:449:33:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false, true>, 1, -1, false, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/Householder.h:98:11:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>; Derived = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >]’
cmatweann/Eigen/src/Householder/Householder.h:105:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>]’
cmatweann/Eigen/src/Householder/Householder.h:106:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, 1, -1, false, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:419:7:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>, 0>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>’
cmatweann/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1>’
cmatweann/Eigen/src/Householder/Householder.h:68:64:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:436:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Householder/Householder.h:84:22:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholder(EssentialPart&, Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) const [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
cmatweann/Eigen/src/Householder/Householder.h:42:43:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:436:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
cmatweann/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
cmatweann/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, -1, -1, 1, -1, -1>’
cmatweann/Eigen/src/Core/TriangularMatrix.h:688:57:   required from ‘void Eigen::TriangularBase<Derived>::evalTo(Eigen::MatrixBase<OtherDerived>&) const [with DenseDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>]’
cmatweann/Eigen/src/Core/Assign.h:581:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:145:24:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:598:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1, 1, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
cmatweann/Eigen/src/Householder/Householder.h:70:37:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:436:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>’
cmatweann/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
cmatweann/Eigen/src/Householder/Householder.h:124:63:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4>’
cmatweann/Eigen/src/Householder/Householder.h:126:27:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>’
cmatweann/Eigen/src/Householder/Householder.h:127:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Householder/Householder.h:128:25:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Product.h:248:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2>’
cmatweann/Eigen/src/Householder/Householder.h:129:34:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true>]’
cmatweann/Eigen/src/Householder/Householder.h:77:5:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:436:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:616:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setOnes() [with Derived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:250:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
cmatweann/Eigen/src/Householder/Householder.h:127:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>]’
cmatweann/Eigen/src/Householder/Householder.h:128:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:256:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true>]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:263:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Product.h:276:52:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:107:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true> >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, 1>’
cmatweann/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>’
cmatweann/Eigen/src/Core/Product.h:276:19:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:107:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, 0>’
cmatweann/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, 1>’
cmatweann/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >’
cmatweann/Eigen/src/Core/Product.h:446:9:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:139:47:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:42:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
cmatweann/cmat.h:247:43:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/Product.h:464:29:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:139:47:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:42:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
cmatweann/cmat.h:247:43:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > >’
cmatweann/Eigen/src/Core/Product.h:276:52:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Dest = Eigen::Matrix<double, -1, -1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:139:47:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Rhs = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >]’
cmatweann/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:42:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; typename Eigen::internal::traits<T>::Scalar = double]’
cmatweann/cmat.h:284:70:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Product.h:276:52:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >]’
cmatweann/Eigen/src/Core/ProductBase.h:115:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>]’
cmatweann/Eigen/src/Core/ProductBase.h:283:3:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:104:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>]’
cmatweann/Eigen/src/Core/Product.h:276:19:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:107:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SwapWrapper<Eigen::Matrix<double, -1, -1> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SwapWrapper<Eigen::Matrix<double, -1, -1> > >’
cmatweann/Eigen/src/Core/Swap.h:40:41:   required from ‘class Eigen::SwapWrapper<Eigen::Matrix<double, -1, -1> >’
cmatweann/Eigen/src/Core/DenseBase.h:408:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:739:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, -1, -1>; MatrixTypeB = Eigen::Matrix<double, -1, -1, 1, -1, -1>; bool SwapPointers = false]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:621:125:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:332:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true> >, 1u>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:145:24:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:598:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
cmatweann/Eigen/src/Core/Product.h:464:14:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:139:47:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:42:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
cmatweann/cmat.h:247:43:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>]’
cmatweann/Eigen/src/Core/Product.h:276:19:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2>; Dest = Eigen::Matrix<double, -1, -1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>; Rhs = Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:268:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:162:52:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:236:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> >, 2> >; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:278:11:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>]’
cmatweann/Eigen/src/Core/Product.h:276:19:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Dest = Eigen::Matrix<double, -1, -1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:139:47:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Rhs = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >]’
cmatweann/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:42:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; typename Eigen::internal::traits<T>::Scalar = double]’
cmatweann/cmat.h:284:70:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>]’
cmatweann/Eigen/src/Core/Product.h:276:19:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/Product.h:353:21:   required from ‘static void Eigen::internal::gemv_selector<1, StorageOrder, BlasCompatible>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:104:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >’
cmatweann/Eigen/src/Core/Product.h:357:71:   required from ‘static void Eigen::internal::gemv_selector<1, StorageOrder, BlasCompatible>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:104:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Product.h:357:71:   required from ‘static void Eigen::internal::gemv_selector<1, StorageOrder, BlasCompatible>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:104:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >, 4>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >, 4>’
cmatweann/Eigen/src/Core/Product.h:357:71:   required from ‘static void Eigen::internal::gemv_selector<1, StorageOrder, BlasCompatible>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Householder/Householder.h:104:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Householder/HouseholderSequence.h:304:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:125:9:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > >, 4>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
cmatweann/Eigen/src/Core/Product.h:446:9:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/Assign.h:534:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/PlainObjectBase.h:591:105:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>]’
cmatweann/Eigen/src/Core/Matrix.h:294:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:139:47:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>]’
cmatweann/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:42:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
cmatweann/cmat.h:247:43:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Dense>’
cmatweann/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >’
cmatweann/Eigen/src/Core/Product.h:357:71:   required from ‘static void Eigen::internal::gemv_selector<1, StorageOrder, BlasCompatible>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >, 4> >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >, 4> >’
cmatweann/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >, 4>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > >’
cmatweann/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >, 4>’
cmatweann/Eigen/src/Core/Product.h:357:71:   required from ‘static void Eigen::internal::gemv_selector<1, StorageOrder, BlasCompatible>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:445:5:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>& Eigen::ColPivHouseholderQR<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/QR/ColPivHouseholderQR.h:114:21:   required from ‘Eigen::ColPivHouseholderQR<MatrixType>::ColPivHouseholderQR(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::ColPivHouseholderQR<MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:120:48:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > >, 4>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true> >, Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>, -1, 1, false, true> > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
cmatweann/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/Product.h:276:52:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
cmatweann/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
cmatweann/Eigen/src/Core/ProductBase.h:115:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Rhs = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>]’
cmatweann/Eigen/src/Core/ProductBase.h:283:3:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>]’
cmatweann/Eigen/src/Core/Product.h:276:19:   required from ‘static void Eigen::internal::outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >, 2>; Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:262:117:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Lhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, -1, 1, true, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > > >::<anonymous enum>’ [-Wenum-compare]
cmatweann/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >’:
cmatweann/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >’
cmatweann/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
cmatweann/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
cmatweann/Eigen/src/Core/Product.h:464:14:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>, 4>; Dest = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; typename ProductType::Scalar = double]’
cmatweann/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>, -1, -1, false, true>; Rhs = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
cmatweann/Eigen/src/Core/ProductBase.h:124:63:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
cmatweann/Eigen/src/Core/PlainObjectBase.h:424:38:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/Core/Matrix.h:197:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:122:44:   required from ‘static bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:599:130:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/Eigen/src/SVD/JacobiSVD.h:418:41:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
cmatweann/cmat.h:317:59:   required from here
cmatweann/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >::<anonymous enum>’ [-Wenum-compare]
make: *** [cmatweann.o] Error 1
